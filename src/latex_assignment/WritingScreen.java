/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package latex_assignment;

import java.awt.Color;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Void
 */
public class WritingScreen extends javax.swing.JFrame {

    public WritingScreen() {
        initComponents();
        l = Latex_Assignment.GetInstance();
        space.requestFocusInWindow();
        FillCurrentSection();
        points.setEnabled(false);
    }

    public WritingScreen(Latex_Assignment a) {
        initComponents();
        l = a;
        space.requestFocusInWindow();
        FillCurrentSection();
        check = false;
        points.setEnabled(false);
    }
    boolean check;
    Latex_Assignment l;
    JFrame f = new JFrame();

    private void FillCurrentSection() {
        document.setText(l.GetLatex());
        if (l.GetSection() == 0) {
            currentSection.setText("No Section");
        } else if (l.GetSection() == 1) {
            currentSection.setText("Section");
        } else {
            currentSection.setText("Sub Section");
        }
        space.setText("2");
    }
    
    private void ExitProgram(){
        WindowEvent w = new  WindowEvent(this, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(w);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        BackgroundPanel = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        next = new javax.swing.JButton();
        currentSection = new java.awt.Label();
        label7 = new java.awt.Label();
        label4 = new java.awt.Label();
        addText = new javax.swing.JButton();
        addJava = new javax.swing.JButton();
        label8 = new java.awt.Label();
        space = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        points = new javax.swing.JTextArea();
        addPath = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        text = new javax.swing.JTextArea();
        endPoint = new javax.swing.JButton();
        Addsection = new javax.swing.JButton();
        startPoint = new javax.swing.JButton();
        help = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        document = new javax.swing.JTextArea();
        SAVE = new javax.swing.JButton();
        END = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        BackgroundPanel.setBackground(new java.awt.Color(255, 255, 255));
        BackgroundPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(51, 204, 255));

        next.setBackground(new java.awt.Color(0, 102, 153));
        next.setFont(new java.awt.Font("Nirmala UI", 1, 30)); // NOI18N
        next.setForeground(new java.awt.Color(255, 255, 255));
        next.setText("ADD POINT");
        next.setActionCommand("");
        next.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        next.setContentAreaFilled(false);
        next.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        next.setOpaque(true);
        next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextActionPerformed(evt);
            }
        });

        currentSection.setFont(new java.awt.Font("Nirmala UI", 1, 24)); // NOI18N

        label7.setFont(new java.awt.Font("Nirmala UI", 1, 24)); // NOI18N
        label7.setText("CURRENT WRITING SECTION TYPE:");

        label4.setFont(new java.awt.Font("Nirmala UI", 1, 24)); // NOI18N
        label4.setText("ADD PARAGRAPH BOX");

        addText.setBackground(new java.awt.Color(0, 102, 153));
        addText.setFont(new java.awt.Font("Nirmala UI", 1, 30)); // NOI18N
        addText.setForeground(new java.awt.Color(255, 255, 255));
        addText.setText("ADD");
        addText.setActionCommand("");
        addText.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        addText.setContentAreaFilled(false);
        addText.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        addText.setOpaque(true);
        addText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addTextActionPerformed(evt);
            }
        });

        addJava.setBackground(new java.awt.Color(0, 102, 153));
        addJava.setFont(new java.awt.Font("Nirmala UI", 1, 30)); // NOI18N
        addJava.setForeground(new java.awt.Color(255, 255, 255));
        addJava.setText("ADD JAVA CODE");
        addJava.setActionCommand("");
        addJava.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        addJava.setContentAreaFilled(false);
        addJava.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        addJava.setOpaque(true);
        addJava.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addJavaActionPerformed(evt);
            }
        });

        label8.setFont(new java.awt.Font("Nirmala UI", 1, 24)); // NOI18N
        label8.setText("SPACING BETWEEN LINES:");

        space.setFont(new java.awt.Font("Nirmala UI", 1, 24)); // NOI18N

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, text, org.jdesktop.beansbinding.ObjectProperty.create(), space, org.jdesktop.beansbinding.BeanProperty.create("nextFocusableComponent"));
        bindingGroup.addBinding(binding);

        space.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spaceActionPerformed(evt);
            }
        });

        points.setColumns(20);
        points.setFont(new java.awt.Font("Nirmala UI", 0, 18)); // NOI18N
        points.setLineWrap(true);
        points.setRows(5);
        points.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 77, 64), 1, true));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, space, org.jdesktop.beansbinding.ObjectProperty.create(), points, org.jdesktop.beansbinding.BeanProperty.create("nextFocusableComponent"));
        bindingGroup.addBinding(binding);

        jScrollPane2.setViewportView(points);

        addPath.setBackground(new java.awt.Color(0, 102, 153));
        addPath.setFont(new java.awt.Font("Nirmala UI", 1, 30)); // NOI18N
        addPath.setForeground(new java.awt.Color(255, 255, 255));
        addPath.setText("ADD PATH");
        addPath.setActionCommand("");
        addPath.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        addPath.setContentAreaFilled(false);
        addPath.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        addPath.setOpaque(true);
        addPath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPathActionPerformed(evt);
            }
        });

        text.setColumns(20);
        text.setFont(new java.awt.Font("Nirmala UI", 0, 18)); // NOI18N
        text.setLineWrap(true);
        text.setRows(5);
        text.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 77, 64), 1, true));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, points, org.jdesktop.beansbinding.ObjectProperty.create(), text, org.jdesktop.beansbinding.BeanProperty.create("nextFocusableComponent"));
        bindingGroup.addBinding(binding);

        jScrollPane3.setViewportView(text);

        endPoint.setBackground(new java.awt.Color(0, 102, 153));
        endPoint.setFont(new java.awt.Font("Nirmala UI", 1, 30)); // NOI18N
        endPoint.setForeground(new java.awt.Color(255, 255, 255));
        endPoint.setText("END POINTS");
        endPoint.setActionCommand("");
        endPoint.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        endPoint.setContentAreaFilled(false);
        endPoint.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        endPoint.setOpaque(true);
        endPoint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                endPointActionPerformed(evt);
            }
        });

        Addsection.setBackground(new java.awt.Color(0, 102, 153));
        Addsection.setFont(new java.awt.Font("Nirmala UI", 1, 30)); // NOI18N
        Addsection.setForeground(new java.awt.Color(255, 255, 255));
        Addsection.setText("ADD SECTION");
        Addsection.setActionCommand("");
        Addsection.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        Addsection.setContentAreaFilled(false);
        Addsection.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        Addsection.setOpaque(true);
        Addsection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddsectionActionPerformed(evt);
            }
        });

        startPoint.setBackground(new java.awt.Color(0, 102, 153));
        startPoint.setFont(new java.awt.Font("Nirmala UI", 1, 30)); // NOI18N
        startPoint.setForeground(new java.awt.Color(255, 255, 255));
        startPoint.setText("START ADDING POINTS");
        startPoint.setActionCommand("");
        startPoint.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        startPoint.setContentAreaFilled(false);
        startPoint.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        startPoint.setOpaque(true);
        startPoint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startPointActionPerformed(evt);
            }
        });

        help.setBackground(new java.awt.Color(0, 102, 153));
        help.setFont(new java.awt.Font("Nirmala UI", 1, 30)); // NOI18N
        help.setForeground(new java.awt.Color(255, 255, 255));
        help.setText("HELP");
        help.setActionCommand("");
        help.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        help.setContentAreaFilled(false);
        help.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        help.setOpaque(true);
        help.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(290, 290, 290)
                        .addComponent(label4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(188, 188, 188)
                        .addComponent(startPoint, javax.swing.GroupLayout.PREFERRED_SIZE, 475, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(label7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25)
                        .addComponent(currentSection, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 799, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 799, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(addJava, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(75, 75, 75)
                                .addComponent(addText, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(addPath, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(next, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(endPoint, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(label8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(space, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(Addsection, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(help, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(label7, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(currentSection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(label8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(space, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Addsection)
                        .addComponent(help)))
                .addGap(23, 23, 23)
                .addComponent(label4, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addJava)
                            .addComponent(addPath)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(addText)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(startPoint)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(next)
                    .addComponent(endPoint))
                .addGap(27, 27, 27))
        );

        BackgroundPanel.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 860, 900));

        document.setColumns(20);
        document.setFont(new java.awt.Font("Nirmala UI", 0, 18)); // NOI18N
        document.setLineWrap(true);
        document.setRows(5);
        document.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 77, 64), 1, true));
        jScrollPane1.setViewportView(document);

        BackgroundPanel.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 0, 750, 820));

        SAVE.setBackground(new java.awt.Color(0, 102, 153));
        SAVE.setFont(new java.awt.Font("Nirmala UI", 1, 30)); // NOI18N
        SAVE.setForeground(new java.awt.Color(255, 255, 255));
        SAVE.setText("SAVE DOCUMENT");
        SAVE.setActionCommand("");
        SAVE.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        SAVE.setContentAreaFilled(false);
        SAVE.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        SAVE.setOpaque(true);
        SAVE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SAVEActionPerformed(evt);
            }
        });
        BackgroundPanel.add(SAVE, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 830, 280, 60));

        END.setBackground(new java.awt.Color(0, 102, 153));
        END.setFont(new java.awt.Font("Nirmala UI", 1, 30)); // NOI18N
        END.setForeground(new java.awt.Color(255, 255, 255));
        END.setText("END DOCUMNET");
        END.setActionCommand("");
        END.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        END.setContentAreaFilled(false);
        END.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        END.setOpaque(true);
        END.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ENDActionPerformed(evt);
            }
        });
        BackgroundPanel.add(END, new org.netbeans.lib.awtextra.AbsoluteConstraints(1330, 830, 270, 60));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(BackgroundPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(BackgroundPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextActionPerformed
        // TODO add your handling code here:
        if (check == true) {
            if (points.getText().equals("")) {
                JOptionPane.showMessageDialog(f, "Missing Value, Point field empty", "ERROR", JOptionPane.ERROR_MESSAGE);
            } else {
                l.AddPoint(points.getText());
                JOptionPane.showMessageDialog(f, "Point Added Successfully");
                document.setText(l.GetLatex());
                points.setText("");
            }
        }
    }//GEN-LAST:event_nextActionPerformed

    private void SAVEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SAVEActionPerformed
        // TODO add your handling code here:
        if (document.getText().equals("")) {
            JOptionPane.showMessageDialog(f, "Missing Value, Document is empty", "ERROR", JOptionPane.ERROR_MESSAGE);
        } else {

            l.SetLatex(document.getText());
            JOptionPane.showMessageDialog(f, "Document Saved");
            document.setText(l.GetLatex());
        }
    }//GEN-LAST:event_SAVEActionPerformed

    private void ENDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ENDActionPerformed
        // TODO add your handling code here:
        l.EndDocument();
        JOptionPane.showMessageDialog(f, "Document ended successfully");
        this.setVisible(false);
        ExitProgram();
    }//GEN-LAST:event_ENDActionPerformed

    private void addTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addTextActionPerformed
        if (check == false) {
            if (text.getText().equals("")) {
                JOptionPane.showMessageDialog(f, "Missing Value, Paragraph box is empty", "ERROR", JOptionPane.ERROR_MESSAGE);
            } else {
                l.AddText(text.getText(), space.getText());
                JOptionPane.showMessageDialog(f, "Paragraph added successfully");
                document.setText(l.GetLatex());
                text.setText("");
            }
        }

    }//GEN-LAST:event_addTextActionPerformed

    private void addJavaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addJavaActionPerformed
        // TODO add your handling code here:
        if (check == false) {
            if (text.getSelectedText() == null) {
                JOptionPane.showMessageDialog(f, "No text selected to add path tags", "ERROR", JOptionPane.ERROR_MESSAGE);
            } else {
                String code = text.getSelectedText();
                String NewPath = " \n\\begin{lstlisting}[language=Java]%]\n\n" + code + " \n\\end{lstlisting}\n";
                String updated = "";
                updated = text.getText().replace(code, NewPath);
                text.setText(updated);
                JOptionPane.showMessageDialog(f, "Java code tags added successfully");
            }
        } else {
            if (points.getSelectedText() == null) {
                JOptionPane.showMessageDialog(f, "No text selected to add path tags", "ERROR", JOptionPane.ERROR_MESSAGE);
            } else {
                String code = points.getSelectedText();
                String NewPath = " \n\\begin{lstlisting}[language=Java]%]\n\n" + code + " \n\\end{lstlisting}\n";
                String updated = "";
                updated = points.getText().replace(code, NewPath);
                points.setText(updated);
                JOptionPane.showMessageDialog(f, "Java code tags added successfully");
            }
        }
    }//GEN-LAST:event_addJavaActionPerformed

    private void spaceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_spaceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_spaceActionPerformed

    private void addPathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPathActionPerformed
        if (check == false) {
            if (text.getSelectedText() == null) {
                JOptionPane.showMessageDialog(f, "No text selected to add path tags", "ERROR", JOptionPane.ERROR_MESSAGE);
            } else {
                String Path = text.getSelectedText();
                String NewPath = " \\path{" + Path + "} ";
                String updated = "";
                updated = text.getText().replace(Path, NewPath);
                text.setText(updated);
                JOptionPane.showMessageDialog(f, "Path tags added successfully");
            }
        } else {
            if (points.getSelectedText() == null) {
                JOptionPane.showMessageDialog(f, "No text selected to add path tags", "ERROR", JOptionPane.ERROR_MESSAGE);
            } else {
                String Path = points.getSelectedText();
                String NewPath = " \\path{" + Path + "} ";
                String updated = "";
                updated = points.getText().replace(Path, NewPath);
                points.setText(updated);
                JOptionPane.showMessageDialog(f, "Path tags added successfully");

            }
        }
    }//GEN-LAST:event_addPathActionPerformed

    private void endPointActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_endPointActionPerformed
        // TODO add your handling code here:
        if (check == true) {
            l.EndPoint();
            check = false;
            points.setEnabled(false);
            text.setEnabled(true);
            document.setText(l.GetLatex());
        }
    }//GEN-LAST:event_endPointActionPerformed

    private void AddsectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddsectionActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        SectionScreen abc = new SectionScreen(l);
        abc.setVisible(true);
    }//GEN-LAST:event_AddsectionActionPerformed

    private void startPointActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startPointActionPerformed
        // TODO add your handling code here:
        if (check == false) {
            l.StartPoint();
            check = true;
            points.setEnabled(true);
            text.setEnabled(false);
            document.setText(l.GetLatex());
        }
    }//GEN-LAST:event_startPointActionPerformed

    private void helpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        Help abc = new Help(l);
        abc.setVisible(true);
    }//GEN-LAST:event_helpActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WritingScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WritingScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WritingScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WritingScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        JFrame newMain = new WritingScreen();
        newMain.setVisible(true);
        newMain.setResizable(false);

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Addsection;
    private javax.swing.JPanel BackgroundPanel;
    private javax.swing.JButton END;
    private javax.swing.JButton SAVE;
    private javax.swing.JButton addJava;
    private javax.swing.JButton addPath;
    private javax.swing.JButton addText;
    private java.awt.Label currentSection;
    private javax.swing.JTextArea document;
    private javax.swing.JButton endPoint;
    private javax.swing.JButton help;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private java.awt.Label label4;
    private java.awt.Label label7;
    private java.awt.Label label8;
    private javax.swing.JButton next;
    private javax.swing.JTextArea points;
    private javax.swing.JTextField space;
    private javax.swing.JButton startPoint;
    private javax.swing.JTextArea text;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
